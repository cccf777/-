/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.44
 * Generated at: 2021-04-14 02:31:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.rrr;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class modify_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function modifyCheck(){\r\n");
      out.write("\tvar form=document.modifyform;\r\n");
      out.write("\tif(!form.password.value){\r\n");
      out.write("\t\talert(\"비밀번호를 적어주세요\");\r\n");
      out.write("\t\tform.password.focus();\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\tif(!form.title.value){\r\n");
      out.write("\t\talert(\"제목을 적어주세요\");\r\n");
      out.write("\t\tform.title.focus();\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\tif(!form.memo.value){\r\n");
      out.write("\t\talert(\"내용을 적어주세요\");\r\n");
      out.write("\t\tform.memo.focus();\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\tform.submit();\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<style>\r\n");
      out.write("nav{\r\n");
      out.write("\tmargin:0 0 0 0;\r\n");
      out.write("\tfloat:left;\r\n");
      out.write("\twidth:100%;\r\n");
      out.write("\tbackground-color:aqua;\r\n");
      out.write("\tfont-family:Verdana,Geneva,sans-serif;\r\n");
      out.write("\tfont-size: 14px;\r\n");
      out.write("\tfont-weight:bold;\r\n");
      out.write("\tcolor:#ff0099;\r\n");
      out.write("}\r\n");
      out.write("nav ul{\r\n");
      out.write("\tlist-style:none;\r\n");
      out.write("}\r\n");
      out.write("nav ul li{\r\n");
      out.write("\tfloat:left;\r\n");
      out.write("\tmargin:0 5px;\r\n");
      out.write("\tlist-style:none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("nav a{\r\n");
      out.write("\tdisplay:block;\r\n");
      out.write("\tpadding:5px 5px 8px 5px;\r\n");
      out.write("\theight:20px;\r\n");
      out.write("\ttext-decoration:none;\r\n");
      out.write("\tcolor:#000000;\r\n");
      out.write("\tborder-style:hidden hidden solid hidden;\r\n");
      out.write("\tborder-color:transparent;\r\n");
      out.write("}\r\n");
      out.write(".section{\r\n");
      out.write("\theight:580px;\r\n");
      out.write("\twidth:100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("div>img{\r\n");
      out.write("\tborder:none;\r\n");
      out.write("\theight:77%;\r\n");
      out.write("\twidth:100%;\r\n");
      out.write("}\r\n");
      out.write("table{\r\n");
      out.write("\talign:center;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
 String checkName="";
	checkName=(String)session.getAttribute("s_Name");
	if(checkName==null){
	
      out.write("\r\n");
      out.write("\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\talert(\"먼저 로그인을 하세요.\");\r\n");
      out.write("\t\thistory.back();\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t\t");
 }else {
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write("\r\n");
      out.write("\t<nav>\r\n");
      out.write("\t\t<ul>\r\n");
      out.write("\t\t<li><a href=\"info.jsp\">회사소개</a></li>\r\n");
      out.write("\t\t<li><a href=\"insert_custom.jsp\">고객정보 등록</a></li>\r\n");
      out.write("\t\t<li><a href=\"insert_part.jsp\">부품정보 등록</a></li>\r\n");
      out.write("\t\t<li><a href=\"member_list.jsp\">고객정보 목록</a></li>\r\n");
      out.write("\t\t<li><a href=\"select_list.jsp\">부품정보 목록</a></li>\r\n");
      out.write("\t\t<li><a href=\"member_list.jsp\">회원정보 목록</a></li>\r\n");
      out.write("\t\t<li><a href=\"list.jsp\">게시판</a></li>\r\n");
      out.write("\t\t<li><a href=\"main.jsp\">홈으로</a></li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t</nav>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"section\">\r\n");
 
request.setCharacterEncoding("utf-8");
Connection conn = null;
PreparedStatement pstmt=null;
String sql="";
ResultSet rs=null;
String rst="";
String msg="";
String name=null;
String password=null;
String title=null;
String memo=null;

int idx=Integer.parseInt(request.getParameter("idx"));

System.out.println("idx:"+idx);

	//데이터베이스 연결관련 정보를 문자열로 선언
	String jdbc_driver="com.mysql.cj.jdbc.Driver";
	String jdbc_url="jdbc:mysql://127.0.0.1/yangjung?useUnicode=yes&characterEncoding=UTF-8";
	
	try{
		//jdbc드라이버로드
		Class.forName(jdbc_driver);
		//데이터베이스 연결정보를 이용해 Connection 인스턴스 확보
		conn=DriverManager.getConnection(jdbc_url,"root","1234");
		//connection 클래스의 인스턴스로부터 sql문 작성을 위한 스테이트먼트 준비
		Statement stmt=conn.createStatement();
		sql="select name,password,title,memo from board wher num="+idx;
		rs= stmt. executeQuery(sql);
		
		if(rs.next()){
			name=rs.getString(1);
			password=rs.getString(2);
			title=rs.getString(3);
			memo=rs.getString(4);
		}
		rs.close();
		stmt.close();
		conn.close();
	}catch(SQLException e){
		out.println(e.toString());
	}
	
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("<form name=modifyform method=post action=\"modift_ok.jsp?idx=");
      out.print( idx );
      out.write("\">\r\n");
      out.write("<table align=center>\r\n");
      out.write("<tr>\r\n");
      out.write("<td>\r\n");
      out.write("<table width=100% cellpadding=0 cellspacing=0 border=0>\r\n");
      out.write("<tr style=\"background:url('../images/table_mid.gif')repeat-x;text-align:center;\">\r\n");
      out.write("<td width=5><img src=\"../images/table_left.gif\" width=5 height=30></td>\r\n");
      out.write("<td>수정</td>\r\n");
      out.write("<td width=5><img src=\"../images/table_right.gif\" width=5 height=30></td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("<table>\r\n");
      out.write("<tr><td>&nbsp;</td>\r\n");
      out.write("<td align=center>제목</td>\r\n");
      out.write("<td><input type=text name=title size=50 maxlegth=50 value=\"");
      out.print(title );
      out.write("\"></td>\r\n");
      out.write("<td>&nbsp;</td></tr>\r\n");
      out.write("<tr height=1 bgcolor=\"#dddddd\"><td colspan=4></td></tr>\r\n");
      out.write("<tr><td>&nbsp;</td>\r\n");
      out.write("<td align=center>이름</td>\r\n");
      out.write("<td><input type=text name=name size=50 maxlength=50 value=\"");
      out.print(name );
      out.write("\"></td>\r\n");
      out.write("<td>&nbsp;</td></tr>\r\n");
      out.write("<tr height=1 bgcolor=\"#dddddd\"><td colspan=4></td></tr>\r\n");
      out.write("<tr><td>&nbsp;</td>\r\n");
      out.write("<td align=center>비밀번호</td>\r\n");
      out.write("<td><input type=password name=password size=50 maxlength=50></td>\r\n");
      out.write("<tr><td>&nbsp;</td>\r\n");
      out.write("\r\n");
      out.write("<tr height=1 bgcolor=\"#dddddd\"><td colspan=4></td></tr>\r\n");
      out.write("<tr><td>&nbsp;</td>\r\n");
      out.write("<td align=center>내용</td>\r\n");
      out.write("<td><textarea name=memo cols=50 rows=13>");
      out.print(memo );
      out.write("</textarea></td>\r\n");
      out.write("<td>&nbsp;</td></tr>\r\n");
      out.write("<tr height=1 bgcolor=\"#dddddd\"><td colspan=4></td></tr>\r\n");
      out.write("<tr height=1 bgcolor=\"#dddddd\"><td colspan=4></td></tr>\r\n");
      out.write("<tr align=center>\r\n");
      out.write("<td>&nbsp;</td>\r\n");
      out.write("<td colspan=2><input type=button value=\"수정\" OnClick=\"javascript:modifyCheck();\">\r\n");
      out.write("<input type=button value=\"취소\" onClick=\"javascript:history.back(-1)\">\r\n");
      out.write("<td>&nbsp;</td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("\t ");
} 
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
