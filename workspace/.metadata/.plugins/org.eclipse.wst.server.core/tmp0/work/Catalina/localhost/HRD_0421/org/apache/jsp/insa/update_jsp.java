/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.44
 * Generated at: 2021-04-21 06:52:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.insa;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.sql.*;

public final class update_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/insa/nav.jsp", Long.valueOf(1618967283691L));
    _jspx_dependants.put("/insa/footer.jsp", Long.valueOf(1618965581611L));
    _jspx_dependants.put("/insa/header.jsp", Long.valueOf(1618970691788L));
    _jspx_dependants.put("/insa/DBconnOracle.jsp", Long.valueOf(1618983171625L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script>\r\n");
      out.write("function check(){\r\n");
      out.write("\tif(document.form.name.value==\"\"){\r\n");
      out.write("\t\talert(\"이름이 비었음메\");\r\n");
      out.write("\t\tdocument.form.name.focus();\r\n");
      out.write("\t}\r\n");
      out.write("\telse if(document.form.id.value==\"\"){\r\n");
      out.write("\t\talert(\"사번이 비었음메\");\r\n");
      out.write("\t\tdocument.form.id.focus();\r\n");
      out.write("\t}\r\n");
      out.write("\telse if(document.form.dept.value==\"\"){\r\n");
      out.write("\t\talert(\"소속부서가 비었음메\");\r\n");
      out.write("\t\tdocument.form.dept.focus();\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\tdocument.form.submit();\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"common.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<header>인사관리 프로젝트\r\n");
      out.write("\r\n");
      out.write("</header>\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"common.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<nav>\r\n");
      out.write("\t<ul>\r\n");
      out.write("\t\t<li><a href=\"select.jsp\">조회</a></li>\r\n");
      out.write("\t\t<li><a href=\"insert.jsp\">사원등록</a></li>\r\n");
      out.write("\t\t<li><a href=\"update.jsp\">정보변경</a></li>\r\n");
      out.write("\t\t<li><a href=\"delete.jsp\">퇴사처리</a></li>\r\n");
      out.write("\t\t<li><a href=\"index.jsp\">홈으로</a></li>\r\n");
      out.write("\t</ul>\r\n");
      out.write("</nav>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("<section>\r\n");
      out.write("\r\n");
      out.write("    \r\n");

	request.setCharacterEncoding("utf-8");
	Connection conn=null;
	//System.out.println("error");
	try{
	String url="jdbc:oracle:thin:@//localhost:1521/xe";
	String user="system";
	String pwd="1234";
	String jdbc_Driver="oracle.jdbc.OracleDriver";
	Class.forName(jdbc_Driver);
	
	conn = DriverManager.getConnection(url,user,pwd);
	System.out.println("db연결 성공");
	
	}catch (SQLException e){
		
		System.out.println("db연결 실패~!");
		System.out.println("SQLException: "+e.getMessage()); 
		e.printStackTrace();
	} 

      out.write(" \r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write('\r');
      out.write('\n');

	request.setCharacterEncoding("utf-8");
	String id=request.getParameter("id");
	
	ResultSet rs=null;
	PreparedStatement pstmt=null;
	try{
		String sql="select *from person0421 where id=?";
		pstmt=conn.prepareStatement(sql);
		pstmt.setString(1,id);
		rs=pstmt.executeQuery();
		
		if(rs.next()){
			String name=rs.getString("name");
			String position= rs.getString("position");
			String dept=rs.getString("dept");
			String duty=rs.getString("duty");
			String phone=rs.getString("phone");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<h3 id=\"h3\">인사관리 사원정보 변경 </h3>\r\n");
      out.write("<form name=form method=post action=\"updateProcess.jsp\">\r\n");
      out.write("<table border=1>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th>성명</th>\r\n");
      out.write("\t\t<td><input type=\"text\" name=\"name\" id=\"in1\" value=\"");
      out.print(name);
      out.write("\"></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th>사원번호</th>\r\n");
      out.write("\t\t<td><input type=\"text\" name=\"id\" id=\"in1\" value=\"");
      out.print(id);
      out.write("\"></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th>소속부서</th>\r\n");
      out.write("\t\t<td><select name=\"dept\" id=\"in1\">\r\n");
      out.write("\t\t\t<option value=\"인사부\"");
if(dept.equals("인사부")){
      out.write("selected");
}
      out.write("\r\n");
      out.write("\t\t\t>인사부</option>\r\n");
      out.write("\t\t\t<option value=\"기획부\"");
if(dept.equals("기획부")){
      out.write("selected");
}
      out.write("\r\n");
      out.write("\t\t\t>기획부</option>\r\n");
      out.write("\t\t\t<option value=\"영업부\"");
if(dept.equals("영업부")){
      out.write("selected");
}
      out.write("\r\n");
      out.write("\t\t\t>영업부</option>\r\n");
      out.write("\t\t\t<option value=\"경리부\"");
if(dept.equals("경리부")){
      out.write("selected");
}
      out.write("\r\n");
      out.write("\t\t\t>경리부</option>\r\n");
      out.write("\t\t\t<option value=\"홍보부\"");
if(dept.equals("홍보부")){
      out.write("selected");
}
      out.write("\r\n");
      out.write("\t\t\t>홍보부</option>\r\n");
      out.write("\t\t\t</select>\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th>직급</th>\r\n");
      out.write("\t\t<td>\r\n");
      out.write("\t\t<select name=\"position\" id=\"in1\">\r\n");
      out.write("\t\t<option value=\"1\"");
if(position.equals("1")){
      out.write("selected");
}
      out.write("\r\n");
      out.write("\t\t>1급</option>\r\n");
      out.write("\t\t<option value=\"2\"");
if(position.equals("2")){
      out.write("selected");
}
      out.write("\r\n");
      out.write("\t\t>2급</option>\r\n");
      out.write("\t\t<option value=\"3\"");
if(position.equals("3")){
      out.write("selected");
}
      out.write("\r\n");
      out.write("\t\t>3급</option>\r\n");
      out.write("\t\t<option value=\"4\"");
if(position.equals("4")){
      out.write("selected");
}
      out.write("\r\n");
      out.write("\t\t>4급</option>\r\n");
      out.write("\t\t<option value=\"5\"");
if(position.equals("5")){
      out.write("selected");
}
      out.write("\r\n");
      out.write("\t\t>5급</option>\r\n");
      out.write("\t\t</select>\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th>직책</th>\r\n");
      out.write("\t\t<td><input type=\"text\" name=\"duty\"  id=\"in1\" value=\"");
      out.print(duty);
      out.write("\"></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th>연락처</th>\r\n");
      out.write("\t\t<td><input type=\"text\" name=\"phone\"  id=\"in1\" value=\"");
      out.print(phone);
      out.write("\"></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td colspan=2 class=\"center\">\r\n");
      out.write("\t\t<input type=\"button\" value=\"변경\" onclick=\"javascript:check()\">\r\n");
      out.write("\t\t<input type=\"reset\" value=\"취소\">\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t");

	
		}
	}catch(SQLException e){
		e.printStackTrace();
	}
	
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("</section>\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"common.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<footer>\r\n");
      out.write("HRDKorea Copyright2021\r\n");
      out.write("</footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
