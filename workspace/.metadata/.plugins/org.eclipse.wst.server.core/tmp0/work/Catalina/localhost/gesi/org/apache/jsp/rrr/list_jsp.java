/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.44
 * Generated at: 2021-04-12 05:24:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.rrr;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>게시판</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

//데이터베이스 연결관련 변수 선언
Connection conn = null;
PreparedStatement pstmt = null;
String sql="";
ResultSet rs = null;
String rst = "";
String msg = "";
int total = 0;

// 데이터베이스 연결관련 정보를 문자열로 선언
String jdbc_driver = "com.mysql.jdbc.Driver";
String jdbc_url = "jdbc:mysql://127.0.0.1/yangjung?useUnicode=yes&characterEncoding=UTF-8";

try{
   // JDBC 드라이버 로드
   Class.forName(jdbc_driver);
   
   // 데이터베이스 연결정보를 이용해 Connection 인스턴스 확보
   conn=DriverManager.getConnection(jdbc_url,"root","1234");
   //  Connection 클래스의 인스턴스로 부터 SQL 문 작성을 위한 Statement 준비
   Statement stmt = conn.createStatement();
   
   String sqlCount = "SELECT COUNT(*) FROM board";
   rs = stmt.executeQuery(sqlCount);
   
   if(rs.next()){
   total = rs.getInt(1);
   }
   rs.close();
   out.print("총 게시물 : " + total + "개");
   
   String sqlList = "SELECT NUM, NAME, TITLE, TIME, HIT from board order by NUM DESC";
   rs = stmt.executeQuery(sqlList);
   
   
      out.write("\r\n");
      out.write("   <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\r\n");
      out.write("   <tr height=\"5\"><td width=\"5\"></td></tr>\r\n");
      out.write("   <tr style=\"background:url('images/table_mid.gif') repeat-x; text-align:center;\">\r\n");
      out.write("   <td width=\"5\"><img src=\"images/table_Left.gif\" width=\"5\" height=\"30\" /></td>\r\n");
      out.write("   <td width=\"73\">번호</td>\r\n");
      out.write("   <td width=\"379\">제목</td>\r\n");
      out.write("   <td width=\"73\">작성자</td>\r\n");
      out.write("   <td width=\"164\">작성일</td>\r\n");
      out.write("   <td width=\"58\">조회수</td>\r\n");
      out.write("   <td width=\"7\"><img src=\"images/table_right.gif\" width=\"5\" height=\"30\" /></td>\r\n");
      out.write("   </tr>\r\n");
      out.write("   ");

   if(total==0) {
   
      out.write("\r\n");
      out.write("   <tr align=\"center\" bgcolor=\"#FFFFFF\" height=\"30\">\r\n");
      out.write("   <td colspan=\"6\">등록된 글이 없습니다.</td>\r\n");
      out.write("   </tr>\r\n");
      out.write("   ");

   } else {
   
   while(rs.next()){
   int idx = rs.getInt(1);
   String name = rs.getString(2);
   String title = rs.getString(3);
   String time = rs.getString(4);
   int hit = rs.getInt(5);
   
      out.write("\r\n");
      out.write("   <tr height=\"25\" align=\"center\">\r\n");
      out.write("   <td>&nbsp;</td>\r\n");
      out.write("   <td>");
      out.print(idx );
      out.write("</td>\r\n");
      out.write("   <td align=\"left\"><a href=\"view.jsp?idx=");
      out.print(idx );
      out.write('"');
      out.write('>');
      out.print(title );
      out.write("</td>\r\n");
      out.write("   <td align=\"center\">");
      out.print(name );
      out.write("</td>\r\n");
      out.write("   <td align=\"center\">");
      out.print(time );
      out.write("</td>\r\n");
      out.write("   <td align=\"center\">");
      out.print(hit );
      out.write("</td>\r\n");
      out.write("   <td>&nbsp;</td>\r\n");
      out.write("   </tr>\r\n");
      out.write("   <tr height=\"1\" bgcolor=\"#D2D2D2\"><td colspan=\"6\"></td></tr>\r\n");
      out.write("   ");

   }
   }
   rs.close();
   stmt.close();
   conn.close();
   } catch(SQLException e) {
   out.println( e.toString());
   }
   
      out.write("\r\n");
      out.write("   <tr height=\"1\" bgcolor=\"#82B5DF\"><td colspan=\"6\" width=\"752\"></td></tr>\r\n");
      out.write("   </table>\r\n");
      out.write("   \r\n");
      out.write("   <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\r\n");
      out.write("   <tr><td colspan=\"4\" height=\"5\"></td></tr>\r\n");
      out.write("   <tr align=\"center\">\r\n");
      out.write("   <td><input type=button value=\"글쓰기\" onclick=\"window.location='write.jsp'\"></td>\r\n");
      out.write("   </tr>\r\n");
      out.write("   </table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
