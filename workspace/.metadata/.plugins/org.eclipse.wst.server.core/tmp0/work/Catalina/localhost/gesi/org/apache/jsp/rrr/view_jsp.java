/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.44
 * Generated at: 2021-04-12 05:26:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.rrr;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.sql.*;

public final class view_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/rrr/DBconn.jsp", Long.valueOf(1617772705016L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("utf-8");
	Connection conn = null;
	try {
		String url = "jdbc:mysql://localhost/yangjung?serverTimezone=UTC";
		String user = "root";
		String pwd = "1234";
		String jdbc_Driver="com.mysql.cj.jdbc.Driver";
		Class.forName(jdbc_Driver);
		
		conn = DriverManager.getConnection(url, user, pwd);
		System.out.println("db 연결 완료");
		
		
	} catch (Exception e) {
		out.println("SQLException : "+e.getMessage());
		e.printStackTrace();
	}

      out.write('\r');
      out.write('\n');

   PreparedStatement pstmt=null;
   ResultSet rs=null;
   
   int idx=Integer.parseInt(request.getParameter("idx"));
   System.out.println("idx :"+idx);
   try{
	   	String sql="select name,title,memo,time,hit from board where num=?";
	   	pstmt=conn.prepareStatement(sql);
	   	pstmt.setInt(1,idx);
		rs=pstmt.executeQuery();
	   	if(rs.next()){
		   String name=rs.getString("name");
		   String title=rs.getString("title");
		   String memo=rs.getString("memo");
		   String time=rs.getString("time");
		   int hit=rs.getInt("hit");
		   hit++;
		   sql="update board set hit=? where num=?";
		   pstmt=conn.prepareStatement(sql);
		   pstmt.setInt(1,hit);
		   pstmt.setInt(2,idx);
		   pstmt.executeUpdate();

      out.write("\r\n");
      out.write("<form name=form method=post action=\"#\">\r\n");
      out.write("<table border=1 >\r\n");
      out.write("<tr><td colspan=2>내용</td></tr>\r\n");
      out.write("<tr><td width=100>글번호</td>\r\n");
      out.write("<td width=400></td></tr>\r\n");
      out.write("<tr><td>조회수</td>\r\n");
      out.write("<td>");
      out.print(hit );
      out.write("</td></tr>\r\n");
      out.write("<tr><td>이름</td>\r\n");
      out.write("<td>");
      out.print(name );
      out.write("</td></tr>\r\n");
      out.write("<tr><td>작성일</td>\r\n");
      out.write("<td>");
      out.print(time );
      out.write("</td></tr>\r\n");
      out.write("<tr><td>제목</td>\r\n");
      out.write("<td>");
      out.print(title );
      out.write("</td></tr>\r\n");
      out.write("<tr><td colspan=2>memo</td></tr>\r\n");
      out.write("<tr><td colspan=2><input type=\"button\" value=\"글쓰기\">\r\n");
      out.write("<input type=\"button\" value=\"답글\">\r\n");
      out.write("<input type=\"button\" value=\"목록\">\r\n");
      out.write("<input type=\"button\" value=\"수정\" onclick=\"window.location='modify.jsp?idx=");
      out.print(idx);
      out.write("'\">\r\n");
      out.write("<input type=\"button\" value=\"삭제\" onclick=\"window.location='delete.jsp?idx=");
      out.print(idx);
      out.write("'\"></td>\r\n");

	
}
   }catch(SQLException e){
	   e.printStackTrace();
   }

      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   <td width=\"7\"><img src=\"images/table_right.gif\" width=\"5\" height=\"30\" /></td>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
